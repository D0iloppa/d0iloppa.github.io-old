{"version":3,"sources":["webpack:///./src/pages/index.js"],"names":["data","posts","node","author","language","categories","getSortedCategoriesByCount","useState","tabIndex","setTabIndex","categoryPosts","useMemo","post","onTabIndexChange","useCallback","title","className","value","onChange","tabs","moreUrl","showMoreButton"],"mappings":"2NAWe,sBAAe,IAAZA,EAAW,EAAXA,KACVC,EAAQD,EAAA,6BAAiC,gBAAGE,EAAH,cAAc,QAAd,MADpB,EAEEF,OAFF,aAEnBG,EAFmB,SAEXC,EAFW,WAGrBC,EAAU,2BAAcC,YAA9B,KAH2B,EAIKC,mBAJL,GAIpBC,EAJoB,KAIVC,EAJU,KAKrBC,EAAgBC,mBACpB,kBACEH,QAEIP,EAAA,QAAa,mBAAUW,sBAAyBP,EAAnC,SACnB,CAACA,EAAW,EALd,IAOMQ,EAAmBC,uBAAY,qBAAcL,EAAd,KAArC,IAEA,OACE,2BACE,uBAAKM,MAAM,SACX,uBAAKZ,OAAL,EAAqBC,SAAUA,IAC/B,uBAAMY,UAAN,OAAyBC,MAAzB,EAA0CC,SAA1C,EAAsEC,KAAMd,IAC5E,uBACEJ,MAAOS,UADT,GAEEU,QAAO,UAAWZ,SAAsBH,EAF1C,IAGEgB,eAAgBX,SAAuB","file":"component---src-pages-index-js-6056edc40d876a627e1c.js","sourcesContent":["import React, { useCallback, useMemo, useState } from 'react';\r\nimport { graphql } from 'gatsby';\r\nimport Layout from '../components/layout';\r\nimport SEO from '../components/seo';\r\nimport Bio from '../components/bio';\r\nimport PostCardsColumn from '../components/post-cards-column';\r\nimport Post from '../models/post';\r\nimport Tabs from '../components/tabs';\r\n\r\nimport { getSortedCategoriesByCount } from '../utils/helpers';\r\n\r\nexport default ({ data }) => {\r\n  const posts = data.allMarkdownRemark.edges.map(({ node }) => new Post(node));\r\n  const { author, language } = data.site.siteMetadata;\r\n  const categories = ['All', ...getSortedCategoriesByCount(posts)];\r\n  const [tabIndex, setTabIndex] = useState(0);\r\n  const categoryPosts = useMemo(\r\n    () =>\r\n      tabIndex === 0\r\n        ? posts\r\n        : posts.filter((post) => post.categories.includes(categories[tabIndex])),\r\n    [categories, tabIndex, posts],\r\n  );\r\n  const onTabIndexChange = useCallback((e, value) => setTabIndex(value), []);\r\n\r\n  return (\r\n    <Layout>\r\n      <SEO title=\"Home\" />\r\n      <Bio author={author} language={language} />\r\n      <Tabs className={'tabs'} value={tabIndex} onChange={onTabIndexChange} tabs={categories} />\r\n      <PostCardsColumn\r\n        posts={categoryPosts.slice(0, 4)}\r\n        moreUrl={`posts/${tabIndex === 0 ? '' : categories[tabIndex]}`}\r\n        showMoreButton={categoryPosts.length > 4}\r\n      />\r\n    </Layout>\r\n  );\r\n};\r\n\r\nexport const pageQuery = graphql`\r\n  query {\r\n    allMarkdownRemark(sort: { fields: frontmatter___date, order: DESC }) {\r\n      edges {\r\n        node {\r\n          id\r\n          excerpt(pruneLength: 500, truncate: true)\r\n          frontmatter {\r\n            categories\r\n            title\r\n            date(formatString: \"MMMM DD, YYYY\")\r\n          }\r\n          fields {\r\n            slug\r\n          }\r\n        }\r\n      }\r\n    }\r\n\r\n    site {\r\n      siteMetadata {\r\n        language\r\n        author {\r\n          name\r\n          bio {\r\n            role\r\n            description\r\n            thumbnail\r\n          }\r\n          social {\r\n            github\r\n            naver\r\n            linkedIn\r\n            instagram\r\n            email            \r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n`;\r\n"],"sourceRoot":""}