{"version":3,"sources":["webpack:///./src/pages/index.js","webpack:///./src/utils/helpers.js"],"names":["data","posts","node","author","language","categories","cntPerCategory","obj","sortable","item","b","a","sortObjectByValue","getSortedCategoriesByCount","useState","tabIndex","setTabIndex","categoryPosts","useMemo","post","onTabIndexChange","useCallback","title","className","value","onChange","tabs","moreUrl","showMoreButton","type","src","data-config"],"mappings":"yNAWe,sBAAe,IAAZA,EAAW,EAAXA,KACVC,EAAQD,EAAA,6BAAiC,gBAAGE,EAAH,cAAc,QAAd,MADpB,EAEEF,OAFF,aAEnBG,EAFmB,SAEXC,EAFW,WAGrBC,EAAU,2BCPwB,SAACJ,GACzC,IAAMK,EAAN,GAQA,OANAL,WAAc,YAAoB,EAAjBI,WACfA,SAAmB,YACjBC,KAA2BA,KAA2BA,KAA3BA,EAA3BA,QAZoB,SAACC,GACzB,IAAIC,EAAJ,GACA,IAAK,IAAL,OAAsBA,OAAc,CAACC,EAAMF,EAArBC,KAEtB,OADAA,QAAc,qBAAUE,KAAOC,EAAjB,MACPH,EAYAI,CAAA,QAAsC,2BDFfC,CAA9B,KAH2B,EAIKC,mBAJL,GAIpBC,EAJoB,KAIVC,EAJU,KAKrBC,EAAgBC,mBACpB,kBACEH,QAEId,EAAA,QAAa,mBAAUkB,sBAAyBd,EAAnC,SACnB,CAACA,EAAW,EALd,IAOMe,EAAmBC,uBAAY,qBAAcL,EAAd,KAArC,IAEA,OACE,2BACE,uBAAKM,MAAM,SACX,uBAAKnB,OAAL,EAAqBC,SAAUA,IAC/B,uBAAMmB,UAAN,OAAyBC,MAAzB,EAA0CC,SAA1C,EAAsEC,KAAMrB,IAC5E,uBACEJ,MAAOgB,UADT,GAEEU,QAAO,UAAWZ,SAAsBV,EAF1C,IAGEuB,eAAgBX,SAAuB,IAEzC,4BAAQY,KAAR,kBAA+BC,IAA/B,sCACNC,cAAY","file":"component---src-pages-index-js-7f02b7cf24eafead21c0.js","sourcesContent":["import React, { useCallback, useMemo, useState } from 'react';\r\nimport { graphql } from 'gatsby';\r\nimport Layout from '../components/layout';\r\nimport SEO from '../components/seo';\r\nimport Bio from '../components/bio';\r\nimport PostCardsColumn from '../components/post-cards-column';\r\nimport Post from '../models/post';\r\nimport Tabs from '../components/tabs';\r\n\r\nimport { getSortedCategoriesByCount } from '../utils/helpers';\r\n\r\nexport default ({ data }) => {\r\n  const posts = data.allMarkdownRemark.edges.map(({ node }) => new Post(node));\r\n  const { author, language } = data.site.siteMetadata;\r\n  const categories = ['All', ...getSortedCategoriesByCount(posts)];\r\n  const [tabIndex, setTabIndex] = useState(0);\r\n  const categoryPosts = useMemo(\r\n    () =>\r\n      tabIndex === 0\r\n        ? posts\r\n        : posts.filter((post) => post.categories.includes(categories[tabIndex])),\r\n    [categories, tabIndex, posts],\r\n  );\r\n  const onTabIndexChange = useCallback((e, value) => setTabIndex(value), []);\r\n\r\n  return (\r\n    <Layout>\r\n      <SEO title=\"Home\" />\r\n      <Bio author={author} language={language} />\r\n      <Tabs className={'tabs'} value={tabIndex} onChange={onTabIndexChange} tabs={categories} />\r\n      <PostCardsColumn\r\n        posts={categoryPosts.slice(0, 4)}\r\n        moreUrl={`posts/${tabIndex === 0 ? '' : categories[tabIndex]}`}\r\n        showMoreButton={categoryPosts.length > 4}\r\n      />\r\n      <script type=\"text/javascript\" src=\"https://www.scmplayer.net/script.js\"\r\ndata-config=\"{'skin':'skins/simpleBlack/skin.css','volume':50,'autoplay':true,'shuffle':true,'repeat':1,'placement':'bottom','showplaylist':false,'playlist':[{'title':'Closer - Retro %2750s Prom Style Chainsmokers / Halsey Cover ft. Kenton Chen','url':'//youtu.be/jemgIOAjGDw'},{'title':'Holy - Justin Bieber','url':'//youtu.be/qaq0nNXy0ak'},{'title':'%uD558%uB8E8%uC885%uC77C - %uC7AC%uC9C0%uD329%uD2B8','url':'//youtu.be/v44Gt9lg11g'},{'title':'Love - Dean','url':'//youtu.be/pXT_XCi6G9Y'},{'title':'%uB098%uB294 %uC0DD%uAC01%uC774 %uB108%uBB34 %uB9CE%uC544 (Feat.%uC6D0%uC288%uD0C0%uC778) - Jclef','url':'//youtu.be/jZm7qRb26C4'},{'title':'GOAT - %uC6D0%uC288%uD0C0%uC778 ','url':'//youtu.be/1qITCtKo79Q'},{'title':'It%27s me - %uC6D0%uC288%uD0C0%uC778','url':'//youtu.be/_7bHeuwJZnM'},{'title':'Waltz of the Flowers - Tchaikovsky','url':'//youtu.be/QxHkLdQy5f0'},{'title':'%uD06C%uB9AC%uC2A4%uB9C8%uC2A4%uB2C8%uAE4C','url':'//youtu.be/JkRKxxLiDNI'},{'title':'%uBBF8%uB9AC %uBA54%uB9AC %uD06C%uB9AC%uC2A4%uB9C8%uC2A4 - %uC544%uC774%uC720','url':'//youtu.be/w14rSMl35ro'},{'title':'%uC6B8%uC5B4%uB3C4 %uB3FC - %uBE44%uD22C%uBE44','url':'//youtu.be/VFq94Re1VNk'},{'title':'Mistletoe - Justin Bieber','url':'//youtu.be/AeRwj3QUTqs'},{'title':'Blinding Lights - The Weeknd','url':'//youtu.be/fHI8X4OXluQ'},{'title':'Watermelon Sugar - Harry Styles','url':'//youtu.be/7-x3uD5z1bQ'}]}\" ></script>\r\n    </Layout>\r\n  );\r\n};\r\n\r\nexport const pageQuery = graphql`\r\n  query {\r\n    allMarkdownRemark(sort: { fields: frontmatter___date, order: DESC }) {\r\n      edges {\r\n        node {\r\n          id\r\n          excerpt(pruneLength: 500, truncate: true)\r\n          frontmatter {\r\n            categories\r\n            title\r\n            date(formatString: \"MMMM DD, YYYY\")\r\n          }\r\n          fields {\r\n            slug\r\n          }\r\n        }\r\n      }\r\n    }\r\n\r\n    site {\r\n      siteMetadata {\r\n        language\r\n        author {\r\n          name\r\n          bio {\r\n            role\r\n            description\r\n            thumbnail\r\n          }\r\n          social {\r\n            github\r\n            naver\r\n            linkedIn\r\n            instagram\r\n            email            \r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n`;\r\n","const sortObjectByValue = (obj) => {\r\n  let sortable = [];\r\n  for (let item in obj) sortable.push([item, obj[item]]);\r\n  sortable.sort((a, b) => b[1] - a[1]);\r\n  return sortable;\r\n};\r\n\r\nexport const getSortedCategoriesByCount = (posts) => {\r\n  const cntPerCategory = {};\r\n\r\n  posts.forEach(({ categories }) => {\r\n    categories.forEach((category) => {\r\n      cntPerCategory[category] = cntPerCategory[category] ? cntPerCategory[category] + 1 : 1;\r\n    });\r\n  });\r\n\r\n  return sortObjectByValue(cntPerCategory).map(([category]) => category);\r\n};\r\n"],"sourceRoot":""}